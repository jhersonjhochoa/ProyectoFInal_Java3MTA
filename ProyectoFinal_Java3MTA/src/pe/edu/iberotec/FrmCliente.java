/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pe.edu.iberotec;


import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import pe.edu.iberotec.models.*;
/**
 *
 * @author jerson
 */
public class FrmCliente extends javax.swing.JInternalFrame {
    //DefaultTableModel tabla = new DefaultTableModel();
    /**
     * Creates new form IsertarCliente
     */
    ArrayList<Cliente> listado;
    int contID = 0;
    Cliente ultimo;
    public FrmCliente() {
        initComponents();
        actualizarID();
        lblErrorTelefono.setText("");
        try{
            rellenarTabla();
        }catch(Exception e){}
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TablaCliente = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtApellido = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        btnInsertarCliente = new javax.swing.JButton();
        btnEliminarCliente = new javax.swing.JButton();
        btnBorrarCampos = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtid = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        txtBuscar = new javax.swing.JTextField();
        lblErrorTelefono = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);

        TablaCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Apellido", "Direccion", "Telefono", "ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TablaCliente);
        if (TablaCliente.getColumnModel().getColumnCount() > 0) {
            TablaCliente.getColumnModel().getColumn(2).setPreferredWidth(160);
            TablaCliente.getColumnModel().getColumn(3).setPreferredWidth(20);
            TablaCliente.getColumnModel().getColumn(4).setPreferredWidth(10);
        }

        jLabel1.setText("NOMBRE:");

        jLabel2.setText("APELLIDO:");

        jLabel3.setText("DIRECCION:");

        jLabel4.setText("TELÉFONO:");

        btnInsertarCliente.setText("INSERTAR CLIENTE");
        btnInsertarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarClienteActionPerformed(evt);
            }
        });

        btnEliminarCliente.setText("ELIMINAR CLIENTE");
        btnEliminarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarClienteActionPerformed(evt);
            }
        });

        btnBorrarCampos.setText("BORRAR LOS CAMPOS");
        btnBorrarCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarCamposActionPerformed(evt);
            }
        });

        jLabel6.setText("ID:");

        txtid.setEditable(false);

        btnBuscar.setText("Buscar ID");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        lblErrorTelefono.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        lblErrorTelefono.setForeground(new java.awt.Color(153, 0, 0));
        lblErrorTelefono.setText("Aquí saldran los errores de formato de número");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBuscar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnEliminarCliente)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel1))
                                .addGap(43, 43, 43)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(30, 30, 30)
                                        .addComponent(lblErrorTelefono, javax.swing.GroupLayout.DEFAULT_SIZE, 478, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(txtApellido, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtDireccion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                                                .addComponent(txtNombre, javax.swing.GroupLayout.Alignment.LEADING))
                                            .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addContainerGap())
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)))))
            .addGroup(layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(btnInsertarCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnBorrarCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblErrorTelefono))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInsertarCliente)
                    .addComponent(btnBorrarCampos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscar)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminarCliente))
                .addContainerGap())
        );

        setBounds(50, 50, 800, 600);
    }// </editor-fold>//GEN-END:initComponents

    private void btnInsertarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarClienteActionPerformed
        listado =  PersistenciaCliente.LoadData();
        lblErrorTelefono.setText("");
        Cliente cli = new Cliente();
        cli.setNombre(txtNombre.getText());
        cli.setApellido(txtApellido.getText());
        cli.setDireccion(txtDireccion.getText());
        
        try{
            cli.setTelefono(Integer.parseInt(txtTelefono.getText()));
            cli.setId(Integer.parseInt(txtid.getText()));
            contID++; 
            listado.add(cli);
            PersistenciaCliente.SaveData(listado);
            rellenarTabla();
            txtNombre.setText("");
            txtApellido.setText("");
            txtDireccion.setText("");
            txtTelefono.setText("");
            txtid.setText("" + contID);
            
        }catch(NumberFormatException e){
            lblErrorTelefono.setText("Formato de número inválido");
        }
        
    }//GEN-LAST:event_btnInsertarClienteActionPerformed

    private void btnEliminarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarClienteActionPerformed
        listado =  PersistenciaCliente.LoadData();
        int[] eliminarDatos = TablaCliente.getSelectedRows();
        int indice = eliminarDatos.length - 1;
        if (indice >= 0) {
            for(int x = indice; indice >= 0; indice--){
                int elim = eliminarDatos[indice];
                System.out.println("" + elim);
                listado.remove(elim);                
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecciona uno o mas datos de la tabla" , "Mensaje", JOptionPane.WARNING_MESSAGE);
        }
        PersistenciaCliente.SaveData(listado);
        rellenarTabla();
        actualizarID();
    }//GEN-LAST:event_btnEliminarClienteActionPerformed

    private void btnBorrarCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarCamposActionPerformed
        txtid.setText("");
        txtNombre.setText("");
        txtApellido.setText("");
        txtDireccion.setText("");
        txtTelefono.setText("");
    }//GEN-LAST:event_btnBorrarCamposActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        listado = PersistenciaCliente.LoadData();
        String b = txtBuscar.getText();
            try{
                int b2 = Integer.parseInt(b);
                String x = "";
                if(b2 <= listado.size() && b2 > 0){
                    for(Cliente cli : listado){
                        int n = cli.getId();
                            if(n == b2){
                                    x = x +"Id : "+ cli.getId()+ "\n"+ "Nombre :"
                                    + " " + cli.getNombre() +"\n" + "Apellido: " 
                                    + cli.getApellido()+"\n" + "Direccion: " 
                                    + cli.getDireccion() +"\n" + "Telefono : "
                                    + cli.getTelefono();

                            }

                    }
                JOptionPane.showMessageDialog(this,x);}
                else {JOptionPane.showMessageDialog(this, "No existe este ID");}
            
            }catch(NumberFormatException e){
                
            
            JOptionPane.showMessageDialog(this, "solo numeros enteros");
            }
    }//GEN-LAST:event_btnBuscarActionPerformed
    public void  LimpiarTabla(){
        DefaultTableModel df = ((DefaultTableModel) TablaCliente.getModel());
        int a = df.getRowCount() -1;
        for (int i = a; i >= 0; i--) {
            df.removeRow(i);
        }
    }
    
    public void LlenarTabla(){
        LimpiarTabla();
        ArrayList<Cliente> lista = PersistenciaCliente.LoadData();
        DefaultTableModel df = ((DefaultTableModel) TablaCliente.getModel());
        for (Cliente a : lista) {
            df.addRow(new Object[]{a.getNombre(), a.getApellido(), a.getDireccion(), a.getTelefono(), a.getId()});
        }
    }
        
    private void rellenarTabla(){
        LimpiarTabla();
        LlenarTabla();
    }
    
    private void actualizarID(){
        listado =  PersistenciaCliente.LoadData();
        if(listado.size() > 0){
            contID = listado.size() - 1;
            //System.out.println("" + contID);
            ultimo = listado.get(contID);
            contID = ultimo.getId() + 1;
        }
        else{contID = 1;}
        
        txtid.setText("" + contID);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaCliente;
    private javax.swing.JButton btnBorrarCampos;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminarCliente;
    private javax.swing.JButton btnInsertarCliente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblErrorTelefono;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtTelefono;
    private javax.swing.JTextField txtid;
    // End of variables declaration//GEN-END:variables
}
